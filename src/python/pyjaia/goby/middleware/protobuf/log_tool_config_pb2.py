# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: goby/middleware/protobuf/log_tool_config.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from goby.middleware.protobuf import app_config_pb2 as goby_dot_middleware_dot_protobuf_dot_app__config__pb2
from goby.protobuf import option_extensions_pb2 as goby_dot_protobuf_dot_option__extensions__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='goby/middleware/protobuf/log_tool_config.proto',
  package='goby.apps.middleware.protobuf',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=_b('\n.goby/middleware/protobuf/log_tool_config.proto\x12\x1dgoby.apps.middleware.protobuf\x1a)goby/middleware/protobuf/app_config.proto\x1a%goby/protobuf/option_extensions.proto\"\xd4\x0f\n\rLogToolConfig\x12:\n\x03\x61pp\x18\x01 \x01(\x0b\x32#.goby.middleware.protobuf.AppConfigB\x08\x8a?\x05\xc2\x0c\x02\x10\x03\x12\x92\x01\n\ninput_file\x18\n \x02(\tB~\x8a?{\xa2\x06nInput goby_logger file to read (e.g. \'vehicle_20200204T121314.goby\')  [can omit --input_file if 1st parameter]\xc2\x0c\x07\n\x01i\x1a\x02\x08\x01\x12p\n\ntype_regex\x18\x0f \x01(\t:\x02.*BX\x8a?U\xa2\x06MRegex that must match type to process this message entry into the output file\xc2\x0c\x02\x10\x02\x12r\n\x0bgroup_regex\x18\x10 \x01(\t:\x02.*BY\x8a?V\xa2\x06NRegex that must match group to process this message entry into the output file\xc2\x0c\x02\x10\x02\x12\x86\x01\n\x12\x65xclude_type_regex\x18\x11 \x01(\t:\x00\x42h\x8a?e\xa2\x06]Regex that if it matches the type excludes processing this message entry into the output file\xc2\x0c\x02\x10\x02\x12\x88\x01\n\x13\x65xclude_group_regex\x18\x12 \x01(\t:\x00\x42i\x8a?f\xa2\x06^Regex that if it matches the group excludes processing this message entry into the output file\xc2\x0c\x02\x10\x02\x12\xf9\x01\n\x0boutput_file\x18\x14 \x01(\tB\xe3\x01\x8a?\xdf\x01\xa2\x06\xd1\x01Output file to write (default is determined by input_file name and output format, e.g. vehicle_20200204T121314.txt for DEBUG_TEXT, vehicle_20200204T121314.h5 for HDF5) [can omit --output_file if 2nd parameter]\xc2\x0c\x07\n\x01o\x1a\x02\x08\x01\x12~\n\x06\x66ormat\x18\x1e \x01(\x0e\x32\x39.goby.apps.middleware.protobuf.LogToolConfig.OutputFormat:\nDEBUG_TEXTB\'\x8a?$\xa2\x06!Output format to convert file to.\x12\xf3\x01\n\x1awrite_hdf5_zero_length_dim\x18\x1f \x01(\x08:\x04trueB\xc8\x01\x8a?\xc4\x01\xa2\x06\xbb\x01If false, do not write HDF5 entries with zero-length dimensions (use NULL). This would be set false to workaround older buggy Java implementations of HDF5. Leave default (true) otherwise.\xc2\x0c\x02\x10\x03\x12\xb7\x02\n\x11hdf5_chunk_length\x18  \x01(\x05\x42\x9b\x02\x8a?\x97\x02\xa2\x06\x8e\x02Set to the HDF chunk length to enable HDF5 chunking (in number of messages per file chunk). This will greatly reduce RAM usage on processing larger .goby files at the expense of somewhat larger .h5 output. The smaller the chunk length the less RAM used by goby_log_tool.\xc2\x0c\x02\x10\x02\x12\xbe\x01\n\x16hdf5_compression_level\x18! \x01(\x05\x42\x9d\x01\x8a?\x99\x01\xa2\x06\x90\x01Set to a value from 0 (no compression) to 9 (max compression). Requires --hdf5_chunk_length to be set as HDF5 requires chunking for compression.\xc2\x0c\x02\x10\x02\x12W\n\x13load_shared_library\x18( \x03(\tB:\x8a?7\xa2\x06\x34Load a shared library (e.g., to load Protobuf files)\"2\n\x0cOutputFormat\x12\x0e\n\nDEBUG_TEXT\x10\x01\x12\x08\n\x04HDF5\x10\x02\x12\x08\n\x04JSON\x10\x03')
  ,
  dependencies=[goby_dot_middleware_dot_protobuf_dot_app__config__pb2.DESCRIPTOR,goby_dot_protobuf_dot_option__extensions__pb2.DESCRIPTOR,])



_LOGTOOLCONFIG_OUTPUTFORMAT = _descriptor.EnumDescriptor(
  name='OutputFormat',
  full_name='goby.apps.middleware.protobuf.LogToolConfig.OutputFormat',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DEBUG_TEXT', index=0, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HDF5', index=1, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JSON', index=2, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2118,
  serialized_end=2168,
)
_sym_db.RegisterEnumDescriptor(_LOGTOOLCONFIG_OUTPUTFORMAT)


_LOGTOOLCONFIG = _descriptor.Descriptor(
  name='LogToolConfig',
  full_name='goby.apps.middleware.protobuf.LogToolConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='app', full_name='goby.apps.middleware.protobuf.LogToolConfig.app', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212?\005\302\014\002\020\003'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='input_file', full_name='goby.apps.middleware.protobuf.LogToolConfig.input_file', index=1,
      number=10, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212?{\242\006nInput goby_logger file to read (e.g. \'vehicle_20200204T121314.goby\')  [can omit --input_file if 1st parameter]\302\014\007\n\001i\032\002\010\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type_regex', full_name='goby.apps.middleware.protobuf.LogToolConfig.type_regex', index=2,
      number=15, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b(".*").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212?U\242\006MRegex that must match type to process this message entry into the output file\302\014\002\020\002'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='group_regex', full_name='goby.apps.middleware.protobuf.LogToolConfig.group_regex', index=3,
      number=16, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b(".*").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212?V\242\006NRegex that must match group to process this message entry into the output file\302\014\002\020\002'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='exclude_type_regex', full_name='goby.apps.middleware.protobuf.LogToolConfig.exclude_type_regex', index=4,
      number=17, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212?e\242\006]Regex that if it matches the type excludes processing this message entry into the output file\302\014\002\020\002'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='exclude_group_regex', full_name='goby.apps.middleware.protobuf.LogToolConfig.exclude_group_regex', index=5,
      number=18, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212?f\242\006^Regex that if it matches the group excludes processing this message entry into the output file\302\014\002\020\002'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_file', full_name='goby.apps.middleware.protobuf.LogToolConfig.output_file', index=6,
      number=20, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212?\337\001\242\006\321\001Output file to write (default is determined by input_file name and output format, e.g. vehicle_20200204T121314.txt for DEBUG_TEXT, vehicle_20200204T121314.h5 for HDF5) [can omit --output_file if 2nd parameter]\302\014\007\n\001o\032\002\010\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='format', full_name='goby.apps.middleware.protobuf.LogToolConfig.format', index=7,
      number=30, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212?$\242\006!Output format to convert file to.'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='write_hdf5_zero_length_dim', full_name='goby.apps.middleware.protobuf.LogToolConfig.write_hdf5_zero_length_dim', index=8,
      number=31, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212?\304\001\242\006\273\001If false, do not write HDF5 entries with zero-length dimensions (use NULL). This would be set false to workaround older buggy Java implementations of HDF5. Leave default (true) otherwise.\302\014\002\020\003'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hdf5_chunk_length', full_name='goby.apps.middleware.protobuf.LogToolConfig.hdf5_chunk_length', index=9,
      number=32, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212?\227\002\242\006\216\002Set to the HDF chunk length to enable HDF5 chunking (in number of messages per file chunk). This will greatly reduce RAM usage on processing larger .goby files at the expense of somewhat larger .h5 output. The smaller the chunk length the less RAM used by goby_log_tool.\302\014\002\020\002'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hdf5_compression_level', full_name='goby.apps.middleware.protobuf.LogToolConfig.hdf5_compression_level', index=10,
      number=33, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212?\231\001\242\006\220\001Set to a value from 0 (no compression) to 9 (max compression). Requires --hdf5_chunk_length to be set as HDF5 requires chunking for compression.\302\014\002\020\002'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='load_shared_library', full_name='goby.apps.middleware.protobuf.LogToolConfig.load_shared_library', index=11,
      number=40, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212?7\242\0064Load a shared library (e.g., to load Protobuf files)'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LOGTOOLCONFIG_OUTPUTFORMAT,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=164,
  serialized_end=2168,
)

_LOGTOOLCONFIG.fields_by_name['app'].message_type = goby_dot_middleware_dot_protobuf_dot_app__config__pb2._APPCONFIG
_LOGTOOLCONFIG.fields_by_name['format'].enum_type = _LOGTOOLCONFIG_OUTPUTFORMAT
_LOGTOOLCONFIG_OUTPUTFORMAT.containing_type = _LOGTOOLCONFIG
DESCRIPTOR.message_types_by_name['LogToolConfig'] = _LOGTOOLCONFIG
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

LogToolConfig = _reflection.GeneratedProtocolMessageType('LogToolConfig', (_message.Message,), dict(
  DESCRIPTOR = _LOGTOOLCONFIG,
  __module__ = 'goby.middleware.protobuf.log_tool_config_pb2'
  # @@protoc_insertion_point(class_scope:goby.apps.middleware.protobuf.LogToolConfig)
  ))
_sym_db.RegisterMessage(LogToolConfig)


_LOGTOOLCONFIG.fields_by_name['app']._options = None
_LOGTOOLCONFIG.fields_by_name['input_file']._options = None
_LOGTOOLCONFIG.fields_by_name['type_regex']._options = None
_LOGTOOLCONFIG.fields_by_name['group_regex']._options = None
_LOGTOOLCONFIG.fields_by_name['exclude_type_regex']._options = None
_LOGTOOLCONFIG.fields_by_name['exclude_group_regex']._options = None
_LOGTOOLCONFIG.fields_by_name['output_file']._options = None
_LOGTOOLCONFIG.fields_by_name['format']._options = None
_LOGTOOLCONFIG.fields_by_name['write_hdf5_zero_length_dim']._options = None
_LOGTOOLCONFIG.fields_by_name['hdf5_chunk_length']._options = None
_LOGTOOLCONFIG.fields_by_name['hdf5_compression_level']._options = None
_LOGTOOLCONFIG.fields_by_name['load_shared_library']._options = None
# @@protoc_insertion_point(module_scope)
