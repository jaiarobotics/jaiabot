syntax = "proto2";

import "dccl/option_extensions.proto";

package jaiabot.protobuf.rest;

message GeographicCoordinate
{
    option (dccl.msg) = {
        id: 90
        max_bytes: 250
        codec_version: 3
        unit_system: "si"
    };

// degrees
    required double lat = 1;
    required double lon = 2;
}

message BotStatus
{
    option (dccl.msg) = {
        id: 91
        max_bytes: 250
        codec_version: 3
        unit_system: "si"
    };

    required uint32 bot_id = 1;
    required uint64 time = 2;
    optional GeographicCoordinate location = 10;
    optional double depth = 11;

    message Attitude
    {
        optional double roll = 1;
        optional double pitch = 2;
        optional double heading = 3;
        optional double course_over_ground = 4;
    }
    optional Attitude attitude = 20;

    message Speed
    {
        optional double over_ground = 1;
        optional double over_water = 2;
    }
    optional Speed speed = 30;

//     optional MissionState mission_state = 40;
}

message Command {
    option (dccl.msg) = {
        id: 92
        max_bytes: 250
        codec_version: 3
        unit_system: "si"
    };


  message PIDControl {
    optional double target = 1  [(dccl.field) = {
            min: 0
            max: 360
            precision: 0
            units { derived_dimensions: "plane_angle" system: "angle::degree" }
        }];
    optional double Kp = 2  [(dccl.field) = {
            min: 0
            max: 100
            precision: 2
        }];
    optional double Ki = 3  [(dccl.field) = {
            min: 0
            max: 100
            precision: 2
        }]; 
    optional double Kd = 4  [(dccl.field) = {
            min: 0
            max: 100
            precision: 2
        }];
  }

  optional double throttle = 3 [(dccl.field) = {
            min: -100
            max: 100
            precision: 0
        }];
        
  optional PIDControl speed = 4;

  optional double rudder = 1 [(dccl.field) = {
            min: -100
            max: 100
            precision: 0
        }];

  optional PIDControl heading = 2;

}
