syntax = "proto2";

import "jaiabot/messages/jaia_dccl.proto";
import "jaiabot/messages/hub.proto";
import "jaiabot/messages/metadata.proto";
import "jaiabot/messages/option_extensions.proto";

package jaiabot.protobuf;

message TaskPacketsRequest
{
    required uint64 start_time = 1
        [(jaia.field).rest_api.presence = GUARANTEED];
    required uint64 end_time = 2 [(jaia.field).rest_api.presence = GUARANTEED];
}

message CommandResult
{
    required bool command_sent = 1
        [(jaia.field).rest_api.presence = GUARANTEED];
}

enum APIErrorCode
{
    // REST API URL errors
    API_ERROR__UNSUPPORTED_API_VERSION = 1
        [(jaia.ev).rest_api.presence = GUARANTEED];
    API_ERROR__INVALID_ACTION = 2 [(jaia.ev).rest_api.presence = GUARANTEED];
    API_ERROR__TARGETS_STRING_MALFORMATTED = 3
        [(jaia.ev).rest_api.presence = GUARANTEED];
    API_ERROR__ACTION_REQUIRES_JSON_POST_DATA = 4
        [(jaia.ev).rest_api.presence = GUARANTEED];
    API_ERROR__INVALID_TARGET = 5 [(jaia.ev).rest_api.presence = GUARANTEED];

    // Parse errors
    API_ERROR__COULD_NOT_PARSE_API_REQUEST_JSON = 10
        [(jaia.ev).rest_api.presence = GUARANTEED];

    // Missing fields
    API_ERROR__REQUEST_NOT_INITIALIZED = 11
        [(jaia.ev).rest_api.presence = GUARANTEED];
    API_ERROR__NO_ACTION_SPECIFIED = 12
        [(jaia.ev).rest_api.presence = GUARANTEED];

    API_ERROR__INVALID_TYPE = 13 [(jaia.ev).rest_api.presence = GUARANTEED];

    // Unimplemented
    API_ERROR__NOT_IMPLEMENTED = 20;
}

message APIError
{
    required APIErrorCode code = 1
        [(jaia.field).rest_api.presence = GUARANTEED];
    optional string details = 2 [(jaia.field).rest_api.presence = GUARANTEED];
}

message APIRequest
{
    message Nodes
    {
        repeated int32 hubs = 1 [(jaia.field).rest_api.presence = GUARANTEED];
        repeated int32 bots = 2 [(jaia.field).rest_api.presence = GUARANTEED];
        optional bool all = 3
            [default = false, (jaia.field).rest_api.presence = GUARANTEED];
    }
    required Nodes target = 1 [(jaia.field).rest_api.presence = GUARANTEED];
    optional string api_key = 2 [(jaia.field).rest_api.presence = GUARANTEED];

    oneof action
    {
        bool status = 11 [(jaia.field).rest_api = {
            presence: GUARANTEED,
            doc: "Query the status of bots/hubs. Expect a response of type 'status'."
            example {
                request: '{"api_key": "4vS6s2jnulxVjrKSB-__tQ", "status": true, "target": {"all": true}}'
                response: '{"request":{"status":true,"target":{"all":true}},"status":{"bots":[{"attitude":{"course_over_ground":180.0,"heading":166.0,"pitch":85.0,"roll":-57.0},"battery_percent":95.0,"bot_id":1,"bot_type":"HYDRO","calibration_status":3,"depth":0.0,"hdop":0.25,"health_state":"HEALTH__OK","location":{"lat":41.657645,"lon":-71.27212},"mission_state":"PRE_DEPLOYMENT__IDLE","pdop":2.07,"received_time":"1722893284636801","salinity":20.0,"speed":{"over_ground":0.0},"temperature":15.06,"time":"1722878885000000","vcc_voltage":24.0,"wifi_link_quality_percentage":100},{"attitude":{"course_over_ground":180.0,"heading":166.0,"pitch":85.0,"roll":-57.0},"battery_percent":95.0,"bot_id":2,"bot_type":"HYDRO","calibration_status":3,"depth":0.0,"hdop":1.03,"health_state":"HEALTH__OK","location":{"lat":41.65765,"lon":-71.27212},"mission_state":"PRE_DEPLOYMENT__IDLE","pdop":1.47,"received_time":"1722893284635458","salinity":20.0,"speed":{"over_ground":0.0},"temperature":15.04,"time":"1722878885000000","vcc_voltage":24.0,"wifi_link_quality_percentage":100}],"hubs":[{"bot_ids_in_radio_file":[1,2],"fleet_id":0,"health_state":"HEALTH__OK","hub_id":1,"known_bot": [{"id": 1, "last_status_time": "1722893284000000"}, {"id": 2, "last_status_time": "1722893285000000"}],"linux_hardware_status":{"wifi":{"is_connected":true,"link_quality":70,"link_quality_percentage":100,"noise_level":0,"signal_level":33}},"location":{"lat":41.66268,"lon":-71.273018},"received_time":"1722893284552504","time":"8614394422756020"}]},"target":{"bots":[1,2],"hubs":[1]}}'
            }
        }];
        bool metadata = 12 [(jaia.field).rest_api = {
            presence: GUARANTEED,
            doc: "Query the metadata of the hub. Expect a response of type 'metadata'."
            example {
                request: '{ "target": {"all": true },"metadata": true, "api_key": "4vS6s2jnulxVjrKSB-__tQ"}'
                response: '{"metadata": {"hubs": [{"goby_version": "3.1.5", "intervehicle_api_version": 7, "is_simulation": true, "ivp_version": "19.8.1+svn9395-10~ubuntu20.04.1", "jaiabot_image_build_date": "Thu Aug 15 16:20:53 UTC 2024", "jaiabot_image_first_boot_date": "Thu Aug 15 13:50:13 UTC 2024", "jaiabot_image_version": "1.12.0~beta2", "jaiabot_version": {"deb_release_branch": "1.y", "deb_repository": "beta", "major": "1", "minor": "12", "patch": "0~beta2"}, "moos_version": "10.4.0", "name": "hub2-fleet6", "raspi_firmware_version": "1.20220331", "xbee_node_id": "Not Available", "xbee_serial_number": "Not Available"}, {"goby_version": "3.1.5", "intervehicle_api_version": 7, "is_simulation": true, "ivp_version": "19.8.1+svn9395-10~ubuntu20.04.1", "jaiabot_image_build_date": "Thu Aug 15 16:20:53 UTC 2024", "jaiabot_image_first_boot_date": "Thu Aug 15 13:50:11 UTC 2024", "jaiabot_image_version": "1.12.0~beta2", "jaiabot_version": {"deb_release_branch": "1.y", "deb_repository": "beta", "major": "1", "minor": "12", "patch": "0~beta2"}, "moos_version": "10.4.0", "name": "hub1-fleet6", "raspi_firmware_version": "1.20220331", "xbee_node_id": "Not Available", "xbee_serial_number": "Not Available"}]}, "request": {"api_key": "", "metadata": true, "target": {"all": true}}, "target": {"hubs": [2, 1]}}'
            }
        }];
        TaskPacketsRequest task_packets = 13 [(jaia.field).rest_api = {
            presence: GUARANTEED,
            doc: "Query task packets from a given range of time. Expect a response of type 'task_packets'."
            example {
                request: '{"target": {"bots": [1]}, "task_packets": {"start_time": 1722797666581176.0, "end_time": 1722970466581176.0}, "api_key": "4vS6s2jnulxVjrKSB-__tQ"}'
                response: '{"request": {"api_key": "4vS6s2jnulxVjrKSB-__tQ", "target": {"bots": [1]}, "task_packets": {"end_time": "1722970466581176", "start_time": "1722797666581176"}}, "task_packets": {"packets": [{"bot_id": 1, "drift": {"drift_duration": 10, "end_location": {"lat": 41.658228, "lon": -71.275736}, "estimated_drift": {"heading": 237.0, "speed": 0.9}, "significant_wave_height": 0.0, "start_location": {"lat": 41.658275, "lon": -71.275645}}, "end_time": "1722895675000000", "start_time": "1722895664000000", "type": "SURFACE_DRIFT"}, {"bot_id": 1, "drift": {"drift_duration": 10, "end_location": {"lat": 41.65826, "lon": -71.2757}, "estimated_drift": {"heading": 316.0, "speed": 0.6}, "significant_wave_height": 0.0, "start_location": {"lat": 41.658225, "lon": -71.275651}}, "end_time": "1722896712000000", "start_time": "1722896702000000", "type": "SURFACE_DRIFT"}, {"bot_id": 1, "drift": {"drift_duration": 10, "end_location": {"lat": 41.659469, "lon": -71.272064}, "estimated_drift": {"heading": 72.0, "speed": 0.7}, "significant_wave_height": 0.0, "start_location": {"lat": 41.659448, "lon": -71.272146}}, "end_time": "1722896904000000", "start_time": "1722896893000000", "type": "SURFACE_DRIFT"}]}}'
            }
        }];
        Command command = 14 [(jaia.field).rest_api = {
            presence: GUARANTEED,
            doc: "Send a command to one or more bots. Expect a response of type 'command_result'."
            example {
                request: '{"target": {"all": true}, "command": {"type": "STOP"}, "api_key": "4vS6s2jnulxVjrKSB-__tQ"}'
                response: '{"command_result": {"command_sent": true}, "request": {"api_key": "4vS6s2jnulxVjrKSB-__tQ", "command": {"bot_id": 1, "time": "1722895468966813", "type": "STOP"}, "target": {"all": true}}, "target": {"hubs": [1], "bots": [2, 1]}}'
            }
        }];
        CommandForHub command_for_hub = 15 [(jaia.field).rest_api = {
            presence: GUARANTEED,
            doc: "Send a command to the hub. Expect a response of type 'command_result'."
            example {
                request: '{"target": {"all": true}, "command_for_hub": {"type": "SET_HUB_LOCATION", "hub_location": {"lat": 41.7, "lon": -70.3}}, "api_key": "4vS6s2jnulxVjrKSB-__tQ"}'
                response: '{"command_result": {"command_sent": true}, "request": {"api_key": "4vS6s2jnulxVjrKSB-__tQ", "command_for_hub": {"hub_id": 1, "hub_location": {"lat": 41.7, "lon": -70.3}, "time": "1722895686821358", "type": "SET_HUB_LOCATION"}, "target": {"all": true}}, "target": {"hubs": [1]}}'
            }
        }];
    }
}

message APIResponse
{
    message Nodes
    {
        repeated int32 hubs = 1 [(jaia.field).rest_api.presence = GUARANTEED];
        repeated int32 bots = 2 [(jaia.field).rest_api.presence = GUARANTEED];
    }
    optional Nodes target = 1 [(jaia.field).rest_api.presence = GUARANTEED];
    message Statuses
    {
        repeated BotStatus bots = 1
            [(jaia.field).rest_api.presence = GUARANTEED];
        repeated HubStatus hubs = 2
            [(jaia.field).rest_api.presence = GUARANTEED];
    }

    message Metadatas
    {
        repeated DeviceMetadata hubs = 1
            [(jaia.field).rest_api.presence = GUARANTEED];
    }

    message TaskPackets
    {
        repeated TaskPacket packets = 1
            [(jaia.field).rest_api.presence = GUARANTEED];
    }

    oneof action
    {
        APIError error = 10 [(jaia.field).rest_api = {
            presence: GUARANTEED,
            doc: "Error with API Request. This can be sent in response to any failed Request action."
        }];
        Statuses status = 11 [(jaia.field).rest_api = {
            presence: GUARANTEED,
            doc: "Bot/Hub status. This is sent in response to a successful Request 'status' action."
        }];
        Metadatas metadata = 12 [(jaia.field).rest_api = {
            presence: GUARANTEED,
            doc: "Metadata response. This is sent in response to a successful Request 'metadata' action."
        }];
        TaskPackets task_packets = 13 [(jaia.field).rest_api = {
            presence: GUARANTEED,
            doc: "Task packet response. This is sent in response to a successful Request 'task_packet' action."
        }];
        CommandResult command_result = 14 [(jaia.field).rest_api = {
            presence: GUARANTEED,
            doc: "Command result. This is sent in response to a successful Request 'command' or 'command_for_hub' action."
        }];
    }

    // copy of original request
    required APIRequest request = 20
        [(jaia.field).rest_api = { presence: GUARANTEED }];
}
