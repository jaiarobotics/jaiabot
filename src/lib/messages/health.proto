syntax = "proto2";

import "dccl/option_extensions.proto";
import "goby/middleware/protobuf/coroner.proto";

package jaiabot.protobuf;

enum Error
{
    // from jaiabot_fusion
    ERROR__TOO_MANY_ERRORS_TO_REPORT_ALL = 0;

    // TODO: IMPLEMENT
    // Directly from systemd
    ERROR__FAILED__GOBYD = 1;
    ERROR__FAILED__GOBY_LIAISON = 2;
    ERROR__FAILED__GOBY_GPS = 3;
    ERROR__FAILED__GOBY_LOGGER = 4;
    ERROR__FAILED__GOBY_CORONER = 5;
    ERROR__FAILED__JAIABOT_HEALTH = 6;
    ERROR__FAILED__JAIABOT_METADATA = 7;
    ERROR__FAILED__JAIABOT_HUB_MANAGER = 8;
    ERROR__FAILED__JAIABOT_WEB_PORTAL = 9;
    ERROR__FAILED__JAIABOT_JAIABOT_FUSION = 10;
    ERROR__FAILED__GOBY_MOOS_GATEWAY = 11;
    ERROR__FAILED__JAIABOT_MISSION_MANAGER = 12;
    ERROR__FAILED__JAIABOT_PID_CONTROL = 13;
    ERROR__FAILED__JAIABOT_BLUEROBOTICS_PRESSURE_SENSOR_DRIVER = 14;
    ERROR__FAILED__JAIABOT_ADAFRUIT_BNO055_DRIVER = 15;
    ERROR__FAILED__JAIABOT_CONTROL_SURFACES_DRIVER = 16;
    ERROR__FAILED__JAIABOT_ENGINEERING = 17;
    ERROR__FAILED__MOOS_MOOSDB = 18;
    ERROR__FAILED__MOOS_PHELMIVP = 19;
    ERROR__FAILED__MOOS_UPROCESSWATCH = 20;
    ERROR__FAILED__MOOS_PNODEREPORTER = 21;
    ERROR__FAILED__PYTHON_WEB_APP = 22;
    ERROR__FAILED__PYTHON_JAIABOT_IMU = 23;
    ERROR__FAILED__PYTHON_JAIABOT_PRESSURE_SENSOR = 24;
    ERROR__FAILED__PYTHON_JAIABOT_AS_EZO_EC = 25;

    // from goby_coroner
    // must be "ERROR__NOT_RESPONDING__" + uppercase(application name)
    ERROR__NOT_RESPONDING__UNKNOWN_APP = 100;
    ERROR__NOT_RESPONDING__GOBYD = 101;
    ERROR__NOT_RESPONDING__GOBY_LIAISON = 102;
    ERROR__NOT_RESPONDING__GOBY_GPS = 103;
    ERROR__NOT_RESPONDING__GOBY_LOGGER = 104;
    ERROR__NOT_RESPONDING__GOBY_CORONER = 105;
    ERROR__NOT_RESPONDING__JAIABOT_HEALTH = 106;
    ERROR__NOT_RESPONDING__JAIABOT_METADATA = 107;
    ERROR__NOT_RESPONDING__JAIABOT_HUB_MANAGER = 108;
    ERROR__NOT_RESPONDING__JAIABOT_WEB_PORTAL = 109;
    ERROR__NOT_RESPONDING__JAIABOT_FUSION = 110;
    ERROR__NOT_RESPONDING__GOBY_MOOS_GATEWAY = 111;
    ERROR__NOT_RESPONDING__JAIABOT_MISSION_MANAGER = 112;
    ERROR__NOT_RESPONDING__JAIABOT_PID_CONTROL = 113;
    ERROR__NOT_RESPONDING__JAIABOT_BLUEROBOTICS_PRESSURE_SENSOR_DRIVER = 114;
    ERROR__NOT_RESPONDING__JAIABOT_ATLAS_SCIENTIFIC_EZO_EC_DRIVER = 115;
    ERROR__NOT_RESPONDING__JAIABOT_ADAFRUIT_BNO055_DRIVER = 116;
    ERROR__NOT_RESPONDING__JAIABOT_CONTROL_SURFACES_DRIVER = 117;
    ERROR__NOT_RESPONDING__JAIABOT_ENGINEERING = 118;
    ERROR__NOT_RESPONDING__JAIABOT_SINGLE_THREAD_PATTERN = 119;
    ERROR__NOT_RESPONDING__JAIABOT_MULTI_THREAD_PATTERN = 120;
    ERROR__NOT_RESPONDING__JAIABOT_SIMULATOR = 121;
    
    // TODO: IMPLEMENT
    // from jaiabot_fusion
    ERROR__MISSING_DATA__GPS_POSITION = 201;
    ERROR__MISSING_DATA__PRESSURE = 210;
    ERROR__MISSING_DATA__TEMPERATURE = 211;
    ERROR__MISSING_DATA__HEADING = 212;
    ERROR__MISSING_DATA__SPEED = 215;
    ERROR__MISSING_DATA__COURSE = 216;

    // TODO: IMPLEMENT
    // from xbee driver
    ERROR__COMMS__NO_XBEE = 300;

    // TODO: IMPLEMENT
    // from goby_moos_gateway
    ERROR__MOOS__HELMIVP_STATE_NOT_DRIVE = 400;
    ERROR__MOOS__HELMIVP_NO_DESIRED_DATA = 401;
    ERROR__MOOS__NO_DATA = 402;

    // TODO: IMPLEMENT
    // from jaiabot_health
    ERROR__SYSTEM__LOW_MEMORY = 500;
    ERROR__SYSTEM__LOW_DISK = 501;
    ERROR__SYSTEM__HIGH_CPU = 502;
    ERROR__SYSTEM__NO_NTP_TIME_SYNC = 503;

    ERROR__VEHICLE__VERY_LOW_BATTERY = 600;
};

enum Warning
{
    // from jaiabot_fusion
    WARNING__TOO_MANY_WARNINGS_TO_REPORT_ALL = 0;

    // TODO: IMPLEMENT
    // from jaiabot_fusion
    WARNING__MISSING_DATA__PITCH = 200;
    WARNING__MISSING_DATA__ROLL = 201;
    WARNING__TEMPERATURE__ARDUINO_TOO_HIGH = 202;
    WARNING__TEMPERATURE__LINUX_TOO_HIGH = 203;

    // TODO: IMPLEMENT
    // from xbee driver
    WARNING__COMMS_LOW_SIGNAL_STRENGTH = 300;

    // TODO: IMPLEMENT
    // from jaiabot_health
    WARNING__VEHICLE__LOW_BATTERY = 400;
}

message ThreadHealth
{
    repeated Error error = 1;
    repeated Warning warning = 2;
}

extend goby.middleware.protobuf.ThreadHealth
{
    optional ThreadHealth jaiabot_thread = 1000;
}

message VehicleHealth {}

extend goby.middleware.protobuf.VehicleHealth
{
    optional VehicleHealth jaiabot_vehicle = 1000;
}
