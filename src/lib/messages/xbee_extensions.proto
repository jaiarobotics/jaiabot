syntax = "proto2";
import "goby/acomms/protobuf/driver_base.proto"; // load up message DriverBaseConfig
import "goby/protobuf/option_extensions.proto";
import "dccl/option_extensions.proto";

package xbee.protobuf;

message Peer
{
    oneof id
    {
        string node_id = 1 [
            (goby.field).description =
                "DEPRECATED (use hub_id or bot_id): set peer modem id as string"
        ];
        int32 hub_id = 3 [(goby.field).description =
                              "Hub ID number for this peer (if peer is hub)"];
        int32 bot_id = 4 [(goby.field).description =
                              "Bot ID number for this peer (if peer is bot)"];
    }

    required uint64 serial_number = 2 [
        (goby.field).description =
            "XBee serial number for this peer (determined by querying ATSH and ATSL)"
    ];
}

message Config
{
    option (dccl.msg) = {
        unit_system: "si"
    };

    optional uint64 network_id = 1 [
        default = 7,
        (goby.field).description =
            "Network ID for this fleet (must match other peers in fleet): sets Xbee ATID=network_id"
    ];
    repeated Peer peers = 2 [
        (goby.field).description =
            "Mapping of Xbee serial_number to hub/bot id for all peers in the fleet"
    ];
    optional bool test_comms = 4 [
        default = false,
        (goby.field).description =
            "If true, enables testing functionality and diagnostics"
    ];
    optional string xbee_info_location = 5 [
        default = "/etc/jaiabot/xbee_info.pb.cfg",
        (goby.field).description =
            "Location to write a file with serial number and node id to be used by jaiabot_metadata."
    ];

    optional int32 hub_id = 6
        [(goby.field).description =
             "If this node is a hub, set its hub_id here."];

    optional bool use_xbee_encryption = 7 [
        default = false,
        (goby.field).description =
            "This is used to determine if we should enable encryption."
    ];

    optional string xbee_encryption_password = 8 [
        default = "",
        (goby.field).description =
            "This is used for the encryption password. Password is a 128 bit value (16 bytes)"
    ];

    optional string hub_info_location = 9 [
        default = "/etc/jaiabot/hub_info.pb.cfg",
        (goby.field).description =
            "Location to write a file with last hub id received from to initialize to that hub on restart."
    ];

    optional string xbee_tx_power_level = 10 [
        default = "2",
        (goby.field).description =
            "Sets or displays the power level at which the device transmits conducted power."
    ];

    optional string xbee_rf_data_rate = 11 [
        default = "2",
        (goby.field).description =
            "Sets and reads the device's RF data rate (the rate at which the device transmits and receives RF data over-the-air)."
    ];

    optional string xbee_mesh_unicast_retries = 12 [
        default = "1",
        (goby.field).description =
            "Set or read the maximum number of network packet delivery attempts."
    ];

    optional string xbee_unicast_mac_retries = 13 [
        default = "3",
        (goby.field).description =
            "Set or read the maximum number of MAC level packet delivery attempts for unicasts."
    ];

    optional string xbee_network_delay_slots = 14 [
        default = "3",
        (goby.field).description =
            "Set or read the maximum random number of network delay slots before rebroadcasting a network packet."
    ];

    optional string xbee_broadcast_multi_transmits = 15 [
        default = "3",
        (goby.field).description =
            "Set or read the number of additional MAC-level broadcast transmissions."
    ];
}

extend goby.acomms.protobuf.DriverConfig
{
    optional Config config = 1500;
}
