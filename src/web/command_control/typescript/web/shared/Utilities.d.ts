import { Map } from "ol";
import { Coordinate } from "ol/coordinate";
import { GeographicCoordinate } from "./JAIAProtobuf";
import { Geometry } from "ol/geom";
export declare function formatLatitude(lat: number, prec?: number): string;
export declare function formatLongitude(lon: number, prec?: number): string;
export declare function formatAttitudeAngle(angleDegrees: number, prec?: number): string;
export declare function deepcopy<T>(aObject: T): T;
export declare function equalValues(a: any, b: any): boolean;
export declare function randomBase57(stringLength: number): string;
export declare function downloadToFile(data: string, mimeType: string, fileName: string): void;
export declare function downloadBlobToFile(name: string, data: BlobPart): void;
export declare function getGeographicCoordinate(coordinate: Coordinate, map: Map): GeographicCoordinate;
export declare function getMapCoordinate(coordinate: GeographicCoordinate, map: Map): Coordinate;
export declare function getElementById<T>(id: string): T;
export declare function addDropdownListener(targetClassName: string, parentContainerId: string, delayMS: number): void;
export declare function adjustAccordionScrollPosition(parentContainerId: string, dropdownContainer: HTMLElement): void;
export declare function formatLength(line: Geometry, map: Map): {
    magnitude: string;
    unit: string;
};
export declare function getHTMLDateString(date: Date): string;
export declare function getHTMLTimeString(date: Date): string;
export declare function convertHTMLStrDateToISO(strDate: string): string;
