syntax = "proto2";

import "goby/middleware/protobuf/app_config.proto";
import "goby/zeromq/protobuf/interprocess_config.proto";
import "goby/middleware/protobuf/serial_config.proto";
import "goby/middleware/protobuf/transporter_config.proto";
import "dccl/option_extensions.proto";
import "jaiabot/messages/health.proto";

package jaiabot.config;

message MissionManager
{
    option (dccl.msg) = {
        unit_system: "si"
    };
    optional goby.middleware.protobuf.AppConfig app = 1;
    optional goby.zeromq.protobuf.InterProcessPortalConfig interprocess = 2;

    required int32 bot_id = 10;
    required goby.middleware.protobuf.TransporterConfig command_sub_cfg = 11;

    // timeout to allow all applications to report HEALTH__OK
    optional double startup_timeout = 12
        [default = 120, (dccl.field).units = { base_dimensions: "T" }];
    
    // acceptable eps when dive depth is considered reached (in meters)
    optional double dive_depth_eps = 30
        [default = 0.1, (dccl.field).units = { base_dimensions: "L" }];

    // bottoming timeout in seconds without depth change greater than
    // dive_depth_eps before assuming the bottom has been hit
    optional double bottoming_timeout = 31
        [default = 5, (dccl.field).units = { base_dimensions: "T" }];

    // surfacing timeout in seconds for unpowered ascent mode
    // if timeout is reached then we switch to powered ascent
    optional double surfacing_timeout = 32
        [default = 30, (dccl.field).units = { base_dimensions: "T" }];

    // acceptable eps when dive surface is considered reached (in meters)
    optional double dive_surface_eps = 33
        [default = 0.75, (dccl.field).units = { base_dimensions: "L" }];

    // number of times to check the gps mode is correct when reacquiring
    optional uint32 total_gps_checks = 34 [default = 5];

    enum RemoteControlSetpointEnd
    {
        RC_SETPOINT_ENDS_IN_STATIONKEEP = 1;
        RC_SETPOINT_ENDS_IN_SURFACE_DRIFT = 2;
    }
    optional RemoteControlSetpointEnd rc_setpoint_end = 50
        [default = RC_SETPOINT_ENDS_IN_STATIONKEEP];

    // e.g. rsync -aP --exclude='*.txt' /var/log/jaiabot/bot/*/
    // jaia@hub0:/var/log/jaiabot/bot_offload
    required string data_offload_command = 60;

    enum EngineeringTestMode
    {
        ENGINEERING_TEST__ALWAYS_LOG_EVEN_WHEN_IDLE = 1;
        ENGINEERING_TEST__IGNORE_SOME_ERRORS = 2;
        ENGINEERING_TEST__INDOOR_MODE__NO_GPS = 3;
    }
    repeated EngineeringTestMode test_mode = 80;

    // errors to ignore,
    // only when test_mode: ENGINEERING_TEST__IGNORE_SOME_ERRORS
    repeated jaiabot.protobuf.Error ignore_error = 81;
}