// Copyright 2021:
//   JaiaRobotics LLC
// File authors:
//   Toby Schneider <toby@gobysoft.org>
//
//
// This file is part of the JaiaBot Project Binaries
// ("The Jaia Binaries").
//
// The Jaia Binaries are free software: you can redistribute them and/or modify
// them under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 2 of the License, or
// (at your option) any later version.
//
// The Jaia Binaries are distributed in the hope that they will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with the Jaia Binaries.  If not, see <http://www.gnu.org/licenses/>.

syntax = "proto2";

import "dccl/option_extensions.proto";

import "goby/middleware/protobuf/app_config.proto";
import "goby/zeromq/protobuf/interprocess_config.proto";
import "goby/moos/protobuf/moos_gateway_config.proto";
import "goby/middleware/protobuf/udp_config.proto";

package jaiabot.config;

message Simulator
{
    option (dccl.msg) = {
        unit_system: "si"
    };

    // required parameters for ApplicationBase3 class
    optional goby.middleware.protobuf.AppConfig app = 1;
    // required parameters for connecting to 'gobyd'
    optional goby.zeromq.protobuf.InterProcessPortalConfig interprocess = 2;

    required goby.apps.moos.protobuf.GobyMOOSGatewayConfig.MOOSConfig moos = 10;

    optional goby.middleware.protobuf.UDPPointToPointConfig gps_udp_config = 20;
    optional goby.middleware.protobuf.UDPPointToPointConfig
        pressure_udp_config = 21;
    optional goby.middleware.protobuf.UDPPointToPointConfig
        salinity_udp_config = 22;

    required double vertical_dive_rate = 30
        [(dccl.field) = { units { derived_dimensions: "velocity" } }];
    required double seafloor_depth = 31
        [(dccl.field) = { units { derived_dimensions: "length" } }];

    message ScalarSample
    {
        optional double depth = 1
            [(dccl.field) = { units: { derived_dimensions: "length" } }];

        optional double temperature = 2 [(dccl.field) = {
            units { derived_dimensions: "temperature" system: "celsius" }
        }];
        optional double salinity = 3;
    }

    repeated ScalarSample sample = 40;
    optional double temperature_stdev = 41 [(dccl.field) = {
        units {
            derived_dimensions: "temperature"
            system: "celsius"
            relative_temperature: true
        }
    }];
    optional double salinity_stdev = 42;
}
