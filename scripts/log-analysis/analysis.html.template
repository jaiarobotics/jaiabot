<html>

<head>
    <title>$page_title</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
        integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
        crossorigin=""/>
    <!-- Make sure you put this AFTER Leaflet's CSS -->
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
        integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
        crossorigin=""></script>

    <script src="https://cdn.plot.ly/plotly-2.9.0.min.js"></script>

    <style>
        #container {
            width: 100%;
            height: 100%;
            display: flex;
        }
        #chart {
            width: 58%;
            height: 100%;
        }
        #map { 
            width: 38%;
            height: 100%; 
        }
        #mapInner {
            width: 100%;
            height: 100%;
        }
    </style>
</head>

<div id="container">
<div id="chart">$charts_div</div>
<div id="map"><div id="mapInner"></div></div>
</div>

<script>

    var map = L.map('mapInner').setView([$center_lat, $center_lon], $zoom)

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map)

    let points = $points
    let path = $path

    var path_polyline = L.polyline(path, {color: 'red'}).addTo(map)

    map.fitBounds(path_polyline.getBounds())

    let plot = document.getElementsByClassName("plotly-graph-div")[0]

    function point_at_time(t) {
    
        let start = 0, end = points.length - 1
            
        // Iterate while start not meets end
        while (start <= end) {
            // Find the mid index
            let mid = Math.floor((start + end) / 2)

            // If element is present at mid, return True
            if (t >= points[mid][0] && t <= points[mid + 1][0]) return points[mid]
    
            // Else look in left or right half accordingly
            else if (points[mid][0] < t)
                start = mid + 1
            else
                end = mid - 1
        }
    
        return null
    }

    let marker = L.marker([0, 0])
    marker.addTo(map)
    console.log(marker)

    plot.on('plotly_hover', function(data){
        let dateString = data.points[0].data.x[data.points[0].pointIndex]
        let date_timestamp_ms = Date.parse(dateString)
        let date_timestamp_s = date_timestamp_ms / 1000.0
        let point = point_at_time(date_timestamp_s)

        // Plot point on the map
        if (point) {
            marker.setLatLng(new L.LatLng(point[1], point[2]))
        }
    })

    plot.on('plotly_unhover', function(data) {
        marker.setLatLng(new L.LatLng(0, 0))
    })

</script>

</html>
