$app_block
$interprocess_block

bot_id: $bot_id
bot_type: $bot_type

is_sim: $fusion_in_simulation

init_data_health_timeout_seconds: 20 # (default = 20)

discard_location_states: IN_MISSION__UNDERWAY__TASK__DIVE__POWERED_DESCENT
discard_location_states: IN_MISSION__UNDERWAY__TASK__DIVE__HOLD
discard_location_states: IN_MISSION__UNDERWAY__TASK__DIVE__UNPOWERED_ASCENT
discard_location_states: IN_MISSION__UNDERWAY__TASK__DIVE__POWERED_ASCENT
discard_location_states: IN_MISSION__UNDERWAY__TASK__DIVE__REACQUIRE_GPS
discard_location_states: IN_MISSION__PAUSE__REACQUIRE_GPS

# IMU Detection
imu_heading_course_max_diff: 45 # In Degrees
course_over_ground_timeout: 3 # timeout in seconds
total_imu_issue_checks: 4 # (default=4 checks) checks * imu_detect_period (1 seconds) = time to detect

# When to start detecting imu issues again after detecting one
imu_detect_timeout: 14 # (default=14 seconds)

imu_issue_detect_horizontal_pitch_checks: 3 # (default=3 checks)
imu_issue_detect_horizontal_pitch_min_time: 1 # (default=1 seconds)
imu_detect_horizontal_pitch: 45 # (default=45 degrees)

# STOP_BOT
# USE_COG
# USE_CORRECTION
# RESTART_BOT
# REBOOT_BOT
# REPORT_IMU
# RESTART_IMU_PY
# REBOOT_BNO085_IMU
# REBOOT_BNO085_IMU_AND_RESTART_IMU_PY
imu_issue_solution: $imu_detection_solution

# Set the period to send bot status in milliseconds
bot_status_period_ms: $bot_status_period # default ((bot_index * 10) + 1000 milliseconds)

include_course_error_detection_states: IN_MISSION__UNDERWAY__MOVEMENT__TRANSIT
include_course_error_detection_states: IN_MISSION__UNDERWAY__TASK__STATION_KEEP
include_course_error_detection_states: IN_MISSION__UNDERWAY__RECOVERY__TRANSIT
include_course_error_detection_states: IN_MISSION__UNDERWAY__RECOVERY__STATION_KEEP

include_imu_detection_states: IN_MISSION__UNDERWAY__MOVEMENT__TRANSIT
include_imu_detection_states: IN_MISSION__UNDERWAY__TASK__STATION_KEEP
include_imu_detection_states: IN_MISSION__UNDERWAY__RECOVERY__TRANSIT
include_imu_detection_states: IN_MISSION__UNDERWAY__RECOVERY__STATION_KEEP

watch_battery_percentage: true # (default = true)
battery_percentage_low_level: 50 # (default = 50)
battery_percentage_very_low_level: 20 # (default = 20)
battery_percentage_critically_low_level: 10 # (default = 10)

# Dive states to send node status based on published depth values
diving_states: IN_MISSION__UNDERWAY__TASK__DIVE__POWERED_DESCENT
diving_states: IN_MISSION__UNDERWAY__TASK__DIVE__HOLD
